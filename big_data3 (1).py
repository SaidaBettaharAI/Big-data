# -*- coding: utf-8 -*-
"""big data3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sun8sESXvroi0s7Gj0QQWDMMDAprEi_Z
"""

from google.colab import files
import pandas as pd
uploaded = files.upload()
for filename in uploaded.keys():
    print(f"تم رفع الملف: {filename}")
df = pd.read_csv(filename)
df.head()

import pandas as pd
import numpy as np
print("عدد القيم المفقودة في كل عمود:")
print(df.isnull().sum())

df.dropna(inplace=True)

df.drop_duplicates(inplace=True)

df['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')

df = df.dropna(subset=['Order Date'])

df['Price Each'] = pd.to_numeric(df['Price Each'], errors='coerce')
df['Quantity Ordered'] = pd.to_numeric(df['Quantity Ordered'], errors='coerce')

df['Sales'] = df['Quantity Ordered'] * df['Price Each']

print("\nحجم البيانات بعد التنظيف:", df.shape)
df.head()

import matplotlib.pyplot as plt
import seaborn as sns

print("إحصاءات وصفية:")
display(df.describe())

monthly_sales = df.groupby('Month')['Sales'].sum()
plt.figure(figsize=(10,5))
monthly_sales.plot(kind='bar', color='skyblue')
plt.title('إجمالي المبيعات حسب الشهر')
plt.xlabel('الشهر')
plt.ylabel('إجمالي المبيعات ($)')
plt.show()

city_sales = df.groupby('City')['Sales'].sum().sort_values(ascending=False)
plt.figure(figsize=(10,5))
city_sales.plot(kind='bar', color='orange')
plt.title('المبيعات حسب المدينة')
plt.xlabel('المدينة')
plt.ylabel('إجمالي المبيعات ($)')
plt.show()

product_sales = df.groupby('Product')['Quantity Ordered'].sum().sort_values(ascending=False)
plt.figure(figsize=(10,5))
product_sales.plot(kind='bar', color='green')
plt.title('أكثر المنتجات مبيعًا')
plt.xlabel('المنتج')
plt.ylabel('الكمية المباعة')
plt.show()

hourly_sales = df.groupby('Hour')['Sales'].sum()
plt.figure(figsize=(10,5))
hourly_sales.plot(kind='line', marker='o', color='purple')
plt.title('المبيعات حسب الساعة')
plt.xlabel('الساعة')
plt.ylabel('إجمالي المبيعات ($)')
plt.grid(True)
plt.show()

from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

city_group = df.groupby('City').agg({
    'Sales': 'sum',
    'Quantity Ordered': 'sum'
}).reset_index()

scaler = StandardScaler()
scaled_data = scaler.fit_transform(city_group[['Sales', 'Quantity Ordered']])

inertia = []
K = range(1, 10)
for k in K:
    km = KMeans(n_clusters=k, random_state=42)
    km.fit(scaled_data)
    inertia.append(km.inertia_)

plt.figure(figsize=(6,4))
plt.plot(K, inertia, 'bo-')
plt.xlabel('عدد المجموعات (k)')
plt.ylabel('Inertia')
plt.title('طريقة Elbow لتحديد عدد المجموعات المثالي')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=42)
city_group['Cluster'] = kmeans.fit_predict(scaled_data)

print("نتائج التجميع حسب المدن:")
display(city_group)

plt.figure(figsize=(8,6))
plt.scatter(city_group['Sales'], city_group['Quantity Ordered'],
            c=city_group['Cluster'], cmap='viridis', s=100)
plt.xlabel('إجمالي المبيعات ($)')
plt.ylabel('إجمالي الكمية المباعة')
plt.title('تحليل التجزئة حسب المدن (K-Means Clustering)')
plt.show()

df.to_csv('Cleaned_Sales_Data.csv', index=False)
print("تم حفظ الملف بنجاح: Cleaned_Sales_Data.csv")